     1                                 %line 8+1 finalexam.asm
     2                                 
     3                                 
     4                                 %line 17+1 finalexam.asm
     5                                 
     6                                 [section .bss]
     7 00000000 <gap>                  buffer resb 4
     8 00000004 <gap>                  ascii resb 3
     9 00000007 <gap>                  num1 resb 1
    10 00000008 <gap>                  num2 resb 1
    11 00000009 <gap>                  num3 resb 1
    12 0000000A <gap>                  product resb 1
    13                                 
    14                                 
    15                                 [section .data]
    16 00000000 496E70757420317374-    msg1 db "Input 1st number (0~9): "
    17 00000000 206E756D6265722028-
    18 00000000 307E39293A20       
    19 00000018 496E70757420326E64-    msg2 db "Input 2nd number (0~9): "
    20 00000018 206E756D6265722028-
    21 00000018 307E39293A20       
    22 00000030 496E70757420337264-    msg3 db "Input 3rd number (0~9): "
    23 00000030 206E756D6265722028-
    24 00000030 307E39293A20       
    25 00000048 70726F64756374203D-    msg4 db "product = "
    26 00000048 20                 
    27                                 [section .text]
    28                                 [global _start]
    29                                 
    30                                 
    31                                 _start:
    32 00000000 48C7C001000000          mov rax, 1
    33                                 %line 37+0 finalexam.asm
    34 00000007 48C7C701000000          mov rdi, 1
    35 0000000E 48C7C6[00000000]        mov rsi, msg1
    36 00000015 48C7C218000000          mov rdx, 24
    37 0000001C 0F05                    syscall
    38                                 %line 38+1 finalexam.asm
    39 0000001E 48C7C000000000          mov rax, 0
    40                                 %line 38+0 finalexam.asm
    41 00000025 48C7C700000000          mov rdi, 0
    42 0000002C 48C7C6[00000000]        mov rsi, buffer
    43 00000033 48C7C202000000          mov rdx, 2
    44 0000003A 0F05                    syscall
    45                                 %line 39+1 finalexam.asm
    46 0000003C 48C7C3[00000000]        mov rbx, buffer
    47 00000043 8A0425[00000000]        mov al, byte[buffer]
    48 0000004A 240F                    and al, 0f
    49 0000004C 880425[00000000]        mov byte[num1], al
    50 00000053 48C7C001000000          mov rax, 1
    51                                 %line 43+0 finalexam.asm
    52 0000005A 48C7C701000000          mov rdi, 1
    53 00000061 48C7C6[00000000]        mov rsi, msg2
    54 00000068 48C7C218000000          mov rdx, 24
    55 0000006F 0F05                    syscall
    56                                 %line 44+1 finalexam.asm
    57 00000071 48C7C000000000          mov rax, 0
    58                                 %line 44+0 finalexam.asm
    59 00000078 48C7C700000000          mov rdi, 0
    60 0000007F 48C7C6[00000000]        mov rsi, buffer
    61 00000086 48C7C202000000          mov rdx, 2
    62 0000008D 0F05                    syscall
    63                                 %line 45+1 finalexam.asm
    64 0000008F 48C7C3[00000000]        mov rbx, buffer
    65 00000096 8A1C25[00000000]       mov bl, byte[buffer]
    66 0000009D 80E30F                  and bl, 0f
    67 000000A0 881C25[00000000]        mov byte[num2], bl
    68 000000A7 48C7C001000000          mov rax, 1
    69                                 %line 49+0 finalexam.asm
    70 000000AE 48C7C701000000          mov rdi, 1
    71 000000B5 48C7C6[00000000]        mov rsi, msg3
    72 000000BC 48C7C218000000          mov rdx, 24
    73 000000C3 0F05                    syscall
    74                                 %line 50+1 finalexam.asm
    75 000000C5 48C7C000000000          mov rax, 0
    76                                 %line 50+0 finalexam.asm
    77 000000CC 48C7C700000000          mov rdi, 0
    78 000000D3 48C7C6[00000000]        mov rsi, buffer
    79 000000DA 48C7C202000000          mov rdx, 2
    80 000000E1 0F05                    syscall
    81                                 %line 51+1 finalexam.asm
    82 000000E3 48C7C3[00000000]        mov rbx, buffer
    83 000000EA 8A0C25[00000000]       mov cl, byte[buffer]
    84 000000F1 80E10F                  and cl, 0f
    85 000000F4 880C25[00000000]        mov byte[num3], cl
    86                                 
    87 000000FB E84C000000              call calculate
    88 00000100 E869000000              call toString
    89                                 
    90 00000105 48C7C001000000          mov rax, 1
    91                                 %line 59+0 finalexam.asm
    92 0000010C 48C7C701000000          mov rdi, 1
    93 00000113 48C7C6[00000000]        mov rsi, msg4
    94 0000011A 48C7C20A000000          mov rdx, 10
    95 00000121 0F05                    syscall
    96                                 %line 60+1 finalexam.asm
    97 00000123 48C7C001000000          mov rax, 1
    98                                 %line 60+0 finalexam.asm
    99 0000012A 48C7C701000000          mov rdi, 1
   100 00000131 48C7C6[00000000]        mov rsi, ascii
   101 00000138 48C7C204000000          mov rdx, 4
   102 0000013F 0F05                    syscall
   103                                 %line 61+1 finalexam.asm
   104 00000141 48C7C03C000000         mov rax, 60
   105 00000148 48C7C700000000         mov rdi, 0
   106 0000014F 0F05                   syscall
   107                                 
   108                                 
   109                                 
   110                                 
   111                                 calculate:
   112 00000151 B200                    mov dl, 0
   113 00000153 8A0425[00000000]        mov al, byte[num2]
   114 0000015A 020425[00000000]        add al, byte[num3]
   115 00000161 80D200                  adc dl, 0
   116 00000164 F62425[00000000]        mul byte[num1]
   117 0000016B 880425[00000000]        mov byte[product+0], al
   118 00000172 C3                      ret
   119                                 
   120                                 
   121                                 
   122                                 
   123                                 
   124                                 
   125                                 
   126                                 
   127                                 
   128                                 
   129                                 
   130                                 
   131                                 
   132                                 
   133                                 
   134                                 
   135                                 toString:
   136 00000173 8B0425[00000000]       mov eax, dword[product]
   137 0000017A 48C7C100000000         mov rcx, 0
   138 00000181 BB0A000000             mov ebx, 10
   139                                 divideLoop:
   140 00000186 BA00000000             mov edx, 0
   141 0000018B F7F3                   div ebx
   142 0000018D 52                     push rdx
   143 0000018E 48FFC1                 inc rcx
   144 00000191 83F800                 cmp eax, 0
   145 00000194 75EE                   jne divideLoop
   146 00000196 48C7C3[00000000]       mov rbx, ascii
   147 0000019D 48C7C700000000         mov rdi, 0
   148                                 popLoop:
   149 000001A4 58                     pop rax
   150 000001A5 0430                   add al, "0"
   151 000001A7 88043B                 mov byte [rbx+rdi], al
   152 000001AA 48FFC7                 inc rdi
   153 000001AD E2F3                   loop popLoop
   154 000001AF C6043B0A               mov byte [rbx+rdi], 10
   155 000001B3 C3                     ret
